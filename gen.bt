// Copyright (c) 2023-present Lukas Neubert.
// This Source Code is subject to the terms of the Mozilla Public License 2.0.
package main

struct Gen {
mut:
	out string
}

fun generate(ast Package) string {
	mut g := Gen{}
	g.writeln('// Code generated by dts-wrap.')
	g.writeln('package ${ast.name}\n')
	g.decls(ast.decls)
	return g.out
}

fun (mut g Gen) decls(decls []Decl) {
	for decl in decls {
		if decl is Const {
			g.const_decl(decl as Const)
		}
	}
}

fun (mut g Gen) const_decl(node Const) {
	// TODO JS type
	g.writeln('const #JS.${node.name} := ${node.typ}')
}

fun (mut g Gen) write (s string){
	g.out += s
}

fun (mut g Gen) writeln (s string){
	g.out += s + "\n"
}
